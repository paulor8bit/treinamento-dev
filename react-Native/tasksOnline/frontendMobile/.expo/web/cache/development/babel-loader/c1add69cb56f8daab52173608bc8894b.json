{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\paulo\\\\git\\\\react-Native\\\\tasksOnline\\\\frontendMobile\\\\src\\\\screens\\\\Auth.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport backgroundImage from \"../../assets/imgs/login.jpg\";\nimport commonStyles from \"../commonStyles\";\n\nvar Auth = function (_Component) {\n  _inherits(Auth, _Component);\n\n  var _super = _createSuper(Auth);\n\n  function Auth() {\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      stageNew: true\n    };\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ImageBackground, {\n        source: backgroundImage,\n        style: styles.background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, \"Tasks\"), React.createElement(View, {\n        style: styles.formContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, this.state.stageNew && React.createElement(TextInput, {\n        placeholder: \"Nome\",\n        value: this.state.email,\n        style: styles.input,\n        onChange: function onChange(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Email\",\n        value: this.state.email,\n        style: styles.input,\n        onChange: function onChange(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Senha\",\n        value: this.state.password,\n        secureTextEntry: true,\n        style: styles.input,\n        onChange: function onChange(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }\n      }), this.state.stageNew && React.createElement(TextInput, {\n        placeholder: \"Confirme sua senha\",\n        value: this.state.confirmPassword,\n        secureTextEntry: true,\n        style: styles.input,\n        onChange: function onChange(confirmPassword) {\n          return _this2.setState({\n            confirmPassword: confirmPassword\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }, \"Entrar\")))));\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nexport { Auth as default };\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontFamily: commonStyles.fontFamily,\n    color: commonStyles.colors.secondary,\n    fontSize: 70,\n    marginBottom: 10\n  },\n  input: {\n    marginTop: 10,\n    backgroundColor: '#FFF',\n    padding: Platform.OS == 'ios' ? 15 : 10,\n    color: '#000'\n  },\n  formContainer: {\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    padding: 20,\n    width: '90%'\n  },\n  button: {\n    backgroundColor: '#080',\n    marginTop: 10,\n    padding: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    fontFamily: commonStyles.fontFamily,\n    color: '#FFF',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/paulo/git/react-Native/tasksOnline/frontendMobile/src/screens/Auth.js"],"names":["React","Component","backgroundImage","commonStyles","Auth","state","name","email","password","confirmPassword","stageNew","styles","background","title","formContainer","input","setState","button","buttonText","StyleSheet","create","flex","width","alignItems","justifyContent","fontFamily","color","colors","secondary","fontSize","marginBottom","marginTop","backgroundColor","padding","Platform","OS"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {ImageBackground, Text, StyleSheet,\r\n        View, TextInput, TouchableOpacity, Platform} from 'react-native'\r\nimport backgroundImage from '../../assets/imgs/login.jpg'\r\nimport commonStyles from '../commonStyles'\r\n\r\nexport default class Auth extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '', \r\n        password: '', \r\n        confirmPassword: '', \r\n        stageNew: true\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <ImageBackground source={backgroundImage}\r\n            style={styles.background}>\r\n                <Text style={styles.title}>Tasks</Text>\r\n                <View style={styles.formContainer}> \r\n                \r\n                {\r\n                    this.state.stageNew &&\r\n\r\n                    <TextInput placeholder='Nome' value={this.state.email}\r\n                    style={styles.input} onChange={email => this.setState({email})}></TextInput>\r\n                                   \r\n                    \r\n                }\r\n                    \r\n                    <TextInput placeholder='Email' value={this.state.email}\r\n                    style={styles.input} onChange={email => this.setState({email})}></TextInput>\r\n                     \r\n                     <TextInput placeholder='Senha' value={this.state.password} secureTextEntry={true}\r\n                    style={styles.input} onChange={password => this.setState({password})}></TextInput>\r\n\r\n\r\n{\r\n                    this.state.stageNew &&\r\n\r\n                    <TextInput placeholder='Confirme sua senha' value={this.state.confirmPassword} secureTextEntry={true}\r\n                    style={styles.input} onChange={confirmPassword => this.setState({confirmPassword})}></TextInput>\r\n                                   \r\n                    \r\n                }\r\n                    <TouchableOpacity>\r\n                        <View style={styles.button}>\r\n                            <Text style={styles.buttonText}>Entrar</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </ImageBackground>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create ({ \r\n    background: {\r\n        flex: 1, \r\n        width: '100%',\r\n        alignItems: 'center', \r\n        justifyContent: 'center'\r\n    }, \r\n    title: {\r\n        fontFamily: commonStyles.fontFamily, \r\n        color: commonStyles.colors.secondary, \r\n        fontSize: 70, \r\n        marginBottom: 10\r\n    }, \r\n    input: {\r\n        marginTop: 10,\r\n        backgroundColor: '#FFF',\r\n        padding: Platform.OS == 'ios' ? 15 : 10,\r\n        color: '#000'\r\n    }, \r\n    formContainer: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        padding: 20, \r\n        width: '90%',\r\n    }, \r\n    button: {\r\n        backgroundColor: '#080',\r\n        marginTop: 10,\r\n        padding: 10,\r\n        alignItems: 'center'\r\n    }, \r\n    buttonText: {\r\n        fontFamily: commonStyles.fontFamily,\r\n        color: '#FFF',\r\n        fontSize:20\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}