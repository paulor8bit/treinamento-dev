{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\paulo\\\\git\\\\react-Native\\\\tasksOffline\\\\src\\\\screens\\\\AddTask.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\n\nvar AddTask = function (_Component) {\n  _inherits(AddTask, _Component);\n\n  var _super = _createSuper(AddTask);\n\n  function AddTask() {\n    _classCallCheck(this, AddTask);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AddTask, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 13\n        }\n      }, React.createElement(Modal, {\n        transparent: true,\n        visible: this.props.isVisible,\n        onRequestClose: this.props.onCancel,\n        animationType: \"slide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.props.onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.casaa,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, \" Nova Tarefa\")), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.props.onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.casaa,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }]);\n\n  return AddTask;\n}(Component);\n\nexport { AddTask as default };\nvar styles = StyleSheet.create({\n  casaa: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#FFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/paulo/git/react-Native/tasksOffline/src/screens/AddTask.js"],"names":["React","Component","AddTask","props","isVisible","onCancel","styles","casaa","container","header","StyleSheet","create","flex","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;IAGqBC,O;;;;;;;;;;;;;6BACR;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAE,IAApB;AAA0B,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,SAA9C;AACJ,QAAA,cAAc,EAAE,KAAKD,KAAL,CAAWE,QADvB;AAEJ,QAAA,aAAa,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,wBAAD;AACI,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,QADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAHA,EAQA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CARA,EAYA,oBAAC,wBAAD;AACI,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWE,QADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZA,CADA,CADJ;AAqBH;;;;EAvBgCN,S;;SAAhBC,O;AA0BrB,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,KAAK,EAAE;AACHK,IAAAA,IAAI,EAAE,CADH;AAEHC,IAAAA,eAAe,EAAE;AAFd,GADsB;AAK7BL,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV;AALkB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport { Modal, View, StyleSheet, TouchableWithoutFeedback} from 'react-native'\r\n\r\nexport default class AddTask extends Component {\r\n    render() {\r\n        return  (\r\n            <View>\r\n            <Modal transparent={true} visible={this.props.isVisible}\r\n        onRequestClose={this.props.onCancel}\r\n        animationType='slide'>\r\n            <TouchableWithoutFeedback\r\n                onPress={this.props.onCancel}> \r\n                <View style={styles.casaa}></View>\r\n            </TouchableWithoutFeedback>\r\n           \r\n            <View style={styles.container}>\r\n            <Text style={styles.header}> Nova Tarefa</Text>\r\n            </View>\r\n\r\n            <TouchableWithoutFeedback\r\n                onPress={this.props.onCancel}> \r\n                <View style={styles.casaa}></View>\r\n            </TouchableWithoutFeedback>\r\n        </Modal>\r\n        </View>\r\n    )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    casaa: {\r\n        flex: 1, \r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)'\r\n    }, \r\n    container: {\r\n        flex: 1, \r\n        backgroundColor: '#FFF'\r\n\r\n    }\r\n})\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}