{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\paulo\\\\git\\\\react-Native\\\\tasksOffline\\\\src\\\\screens\\\\TaskList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Plataform } from \"react-native-web/dist/index\";\nimport commonStyles from \"../commonStyles\";\nimport todayImage from \"../../assets/imgs/today.jpg\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport Task from \"../components/Task\";\n\nvar TaskList = function (_Component) {\n  _inherits(TaskList, _Component);\n\n  var _super = _createSuper(TaskList);\n\n  function TaskList() {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showDoneTasks: true,\n      tasks: [{\n        id: Math.random(),\n        desc: 'Comprar Livro de React Native',\n        estimateAt: new Date(),\n        doneAt: new Date()\n      }, {\n        id: Math.random(),\n        desc: 'Ler Livro de React Native',\n        estimateAt: new Date(),\n        doneAt: null\n      }]\n    };\n\n    _this.toogleFilter = function () {\n      _this.setState({\n        showDoneTasks: !_this.state.showDoneTasks\n      });\n    };\n\n    _this.toggleTask = function (taskId) {\n      var tasks = _toConsumableArray(_this.state.tasks);\n\n      tasks.forEach(function (task) {\n        if (task.id === taskId) {\n          task.doneAt = task.doneAt ? null : new Date();\n        }\n      });\n\n      _this.setState({\n        tasks: tasks\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var today = moment().locale('pt-br').format('ddd, D [de] MMMM');\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: todayImage,\n        style: styles.background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.iconBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"eye eye-slash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }))), React.createElement(View, {\n        style: styles.titleBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"Hoje\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, today))), React.createElement(View, {\n        style: styles.taskList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.tasks,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Task, _extends({}, item, {\n            toggleTask: _this2.toggleTask,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 49\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport { TaskList as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  background: {\n    flex: 3\n  },\n  taskList: {\n    flex: 7\n  },\n  titleBar: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  title: {\n    fontFamily: commonStyles.fontFamily,\n    color: commonStyles.colors.secondary,\n    fontSize: 50,\n    marginLeft: 20,\n    marginBottom: 20\n  },\n  subtitle: {\n    fontFamily: commonStyles.fontFamily,\n    color: commonStyles.colors.secondary,\n    fontSize: 20,\n    marginLeft: 20,\n    marginBottom: 30\n  },\n  iconBar: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["C:/Users/paulo/git/react-Native/tasksOffline/src/screens/TaskList.js"],"names":["React","Component","Plataform","commonStyles","todayImage","Icon","moment","Task","TaskList","state","showDoneTasks","tasks","id","Math","random","desc","estimateAt","Date","doneAt","toogleFilter","setState","toggleTask","taskId","forEach","task","today","locale","format","styles","container","background","iconBar","toggleFilter","titleBar","title","subtitle","taskList","item","StyleSheet","create","flex","justifyContent","fontFamily","color","colors","secondary","fontSize","marginLeft","marginBottom","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text, ImageBackground, StyleSheet, FlatList, TouchableOpacity, Plataform } from 'react-native'\r\n\r\nimport commonStyles from '../commonStyles'\r\nimport todayImage from '../../assets/imgs/today.jpg'\r\n\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/pt-br'\r\n\r\nimport Task from '../components/Task'\r\n\r\nexport default class TaskList extends Component {\r\n    state = {\r\n        showDoneTasks: true,\r\n        tasks: [{\r\n            id: Math.random(),\r\n            desc: 'Comprar Livro de React Native',\r\n            estimateAt: new Date(),\r\n            doneAt: new Date(),\r\n        }, {\r\n            id: Math.random(),\r\n            desc: 'Ler Livro de React Native',\r\n            estimateAt: new Date(),\r\n            doneAt: null,\r\n        }]\r\n    }\r\n\r\n    toogleFilter = () => {\r\n        this.setState({showDoneTasks: !this.state.showDoneTasks})\r\n    }\r\n\r\n    toggleTask = taskId => {\r\n        const tasks = [...this.state.tasks]\r\n        tasks.forEach(task => {\r\n            if(task.id === taskId) {\r\n                task.doneAt = task.doneAt ? null : new Date()\r\n            }\r\n        })\r\n\r\n        this.setState({ tasks })\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        const today = moment().locale('pt-br').format('ddd, D [de] MMMM')\r\n        return (\r\n            <View style={styles.container}>\r\n                <ImageBackground source={todayImage}\r\n                    style={styles.background}>\r\n                        <View style={styles.iconBar}>\r\n                            <TouchableOpacity onPress={this.toggleFilter}>\r\n                                <Icon name=\"eye eye-slash\" />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    <View style={styles.titleBar}>\r\n                        <Text style={styles.title}>Hoje</Text>\r\n                        <Text style={styles.subtitle}>{today}</Text>\r\n                    </View>\r\n                </ImageBackground>\r\n                <View style={styles.taskList}>\r\n                    <FlatList data={this.state.tasks}\r\n                        keyExtractor={item => `${item.id}`}\r\n                        renderItem={({item}) => <Task {...item} toggleTask={this.toggleTask} />} />\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    background: {\r\n        flex: 3\r\n    },\r\n    taskList: {\r\n        flex: 7\r\n    },\r\n    titleBar: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end'\r\n    },\r\n    title: {\r\n        fontFamily: commonStyles.fontFamily,\r\n        color: commonStyles.colors.secondary,\r\n        fontSize: 50,\r\n        marginLeft: 20,\r\n        marginBottom: 20\r\n    },\r\n    subtitle: {\r\n        fontFamily: commonStyles.fontFamily,\r\n        color: commonStyles.colors.secondary,\r\n        fontSize: 20,\r\n        marginLeft: 20,\r\n        marginBottom: 30\r\n    }, \r\n    iconBar: {\r\n        flexDirection: 'row',\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}