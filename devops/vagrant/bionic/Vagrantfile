#vagrantfile
#criando uma máquina chamada bionic
#Ver os docs no site
#depois mandar vagrant up

# script para as variáveis
$script_mysql = <<-SCRIPT
 apt-get update && \ 
 apt-get install -y mysql-server-5.7 && \
 mysql -e "create user 'phpuser'@'%' identified by 'pass';"

SCRIPT

$script_ansible = <<-SCRIPT
apt-get update && \
apt-get install -y software-properties-common && \ 
add-apt-repository --yes --update ppa:ansible/ansible && \
apt-get install -y ansible

SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  ##config global para todas VMs
  config.vm.provider "virtualbox" do |v|
    v.memory = 512
    v.cpus = 1
  end 

  #rodando um sctipt (legal rodar partir do github)
  # config.vm.provision "shell", path: "https://example.com/provisioner.sh"

  #nova "VM" para o BD
  config.vm.define "mysqldb" do |mysql|
    # redirecionar porta, nesse exemplo a máquina virtual server web 80 
    # a principio fora do mysql fica assim: config.vm.network "forwarded_port", guest: 80, host:8080 
    mysql.vm.network "forwarded_port", guest: 80, host:8080 
    #mysql.vm.network "private_network", ip: "192.168.1.1"
    #mysql.vm.network "private_network", type: "dhcp"
    #Com brigde pegando DHCP
    #mysql.vm.network "public_network"
    mysql.vm.network "public_network", ip:"192.168.1.11"
    
    #Um exemplo de comando echo para virtual
    mysql.vm.provision "shell", inline: "echo Hello, World"
    #Script para enviar key pub do ssh 
    mysql.vm.provision "shell", inline: "cat /configs/id_bionic.pub >> .ssh/authorized_keys"
    # instalar pacotes, ver também que ta usando variável de script
    mysql.vm.provision "shell", inline: $script_mysql
    #colocar nova config alterada no windows para virtual
    mysql.vm.provision "shell", inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf/"
    mysql.vm.provision "shell", inline: "service mysql restart"
    
    #criar pasta personalizada compartilhada entre as máquinas
    mysql.vm.synced_folder "./configs", "/configs"
    #desabilita pasta compartilhada, a do exemplo é a padrão
    mysql .vm.synced_folder ".", "/vagrant", disabled: true
  end
  #segunda maquina virtual para server php  
    config.vm.define "phpweb" do |phpweb|
      phpweb.vm.network "forwarded_port", guest: 8888, host:8888
      phpweb.vm.network "public_network", ip:"192.168.1.12"
      
      phpweb.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 2
        v.name = "PHP_SERVER"
      end 

      #Instalando Puppet e chamando para instalar o PHP Server
      phpweb.vm.provision "shell", 
        inline: "apt-get update && apt-get install -y puppet"
      
        #Chamando o Puppet para maquina PHP
        phpweb.vm.provision "puppet" do |puppet|
          puppet.manifests_path = ".configs/manifests"
          puppet.manifests_file = "phpweb.pp"
          end
      

    end

  #as duas VM para teste do ansible
  config.vm.define "mysqlserver" do |mysqlserver|
    mysqlserver.vm.network "public_network", ip:"192.168.1.13"
    mysqlserver.vm.provision "shell", inline: "cat /vagrant/configs/id_bionic.pub >> .ssh/authorized_keys"

  end
  config.vm.define "ansible" do |ansible|
    #esta maquina so precisa ser feita caso não tenha ubuntu como hospedeiro
    ansible.vm.network "public_network", ip:"192.168.1.14"
    
    #importando a chave privada (o cliente)
    ansible.vm.provision "shell", inline: "cp /vagrant/id_bionic >> /home/vagrant && \
                                          chmod 600 /home/vagrant/id_bionic"

    ansible.vm.provision "shell", inline: $script_ansible

    ansible.vm.provision "shell", inline: "ansible-playbook -i /vagrant/configs/ansible/hosts \
                                            /vagrant/configs/ansible/playbook.yml"
  end

  #Exemplo usando outra SO de VM
  config.vm.define "memcached" do |memcached|
    memcached.vm.box = "centos/7"
      
      memcached.vm.provider "virtualbox" do |vb|
      vb.name = "memcached_VM"
      # end
  end

end
