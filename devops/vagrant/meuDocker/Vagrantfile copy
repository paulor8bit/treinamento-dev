#vagrantfile
#criando uma máquina chamada bionic
#Ver os docs no site
#depois mandar vagrant up

# script para as variáveis

Vagrant.configure("2") do |config|
  ##config global para todas VMs
  config.vm.box = "ubuntu/bionic64"
  

  #Docker default
    config.vm.define "dockerdefault" do |dockerdefault|
      dockerdefault.vm.provider "virtualbox" do |vb|
      vb.name = "dockerDefault_vm"
      end #nome
      dockerdefault.vm.provision "shell", inline: "apt-get update && apt-get install -y docker.io"
    
  end #Docker Defaut

  #Docker Remota
  config.vm.define "dockerremota" do |dockerremota|
    dockerremota.vm.provider "virtualbox" do |vb|
      vb.name = "dockeRemota_vm"
    end #nome
      dockerremota.vm.provision "shell", inline: "apt-get update && apt-get install -y docker.io"
      #No hospedeiro ssh-keygen -t rsa
      dockerremota.vm.provision "shell", inline: "cat /vagrant/configs/id_rsa.pub >> .ssh/authorized_keys"
      #No hospedeiro ssh -i- .vagrant/machines/default/virtualbox/private_key vagrant@192.168.1.77.77
      dockerremota.vm.network "private_network", ip: "192.168.77.77"
      dockerremota.vm.network "public_network"
    end #Dcoker Remota

  #as duas VM para teste do ansible
  #VM Host Test
  config.vm.define "hosttest" do |hosttest|
    hosttest.vm.network "public_network"
    hosttest.vm.network "private_network", ip: "192.168.77.78"
    hosttest.vm.provider "virtualbox" do |vb|
      vb.name = "hostTest_VM"
    end #nome
    hosttest.vm.provision "shell", inline: "cat /vagrant/configs/id_rsa.pub >> .ssh/authorized_keys"
    #No hospedeiro ssh -i- .vagrant/machines/default/virtualbox/private_key vagrant@192.168.1.77.78

  end #VM Host Test

    #VM Host Test2
    config.vm.define "hosttest2" do |hosttest2|
      hosttest2.vm.network "public_network"
      hosttest2.vm.network "private_network", ip: "192.168.77.78"
      hosttest2.vm.provider "virtualbox" do |vb|
        vb.name = "hostTest2_VM"
      end #nome
      hosttest2.vm.provision "shell", inline: "cat /vagrant/configs/id_rsa.pub >> .ssh/authorized_keys"
      #No hospedeiro ssh -i- .vagrant/machines/default/virtualbox/private_key vagrant@192.168.1.77.78
  
    end #VM Host Test
  

  #Ansible
  config.vm.define "ansible" do |ansible|
  ansible.vm.network "public_network"
  ansible.vm.network "private_network", ip: "192.168.77.79"
    
  ansible.vm.provider "virtualbox" do |vb|
      vb.name = "ansible_VM"
  end #nome
  
  ansible.vm.provision "shell", inline: "cat /vagrant/configs/id_rsa.pub >> .ssh/authorized_keys"
  #No hospedeiro ssh -i- .vagrant/machines/default/virtualbox/private_key vagrant@192.168.1.77.79
  #   #importando a chave privada (o cliente)
    ansible.vm.provision "shell", inline: "cp /vagrant/configs/id_rsa /home/vagrant/ && \
                                          chmod 600 /home/vagrant/id_rsa && chown vagrant:vagrant id_rsa"

    ansible.vm.provision "shell", inline: $script_ansible

    # ansible.vm.provision "shell", inline: "ansible-playbook -i /vagrant/configs/ansible/hosts \
    #                                         /vagrant/configs/ansible/playbook.yml"
  end #Ansible

  end